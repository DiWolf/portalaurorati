{% extends "templates/admin.njk" %}
{% block content %}
  <div class="row">
    <div class="col-12">
      <div class="card border shadow-xs mb-4">
        <div class="card-header border-bottom pb-0">
          <div class="d-sm-flex align-items-center">
            <div>
              <h6 class="font-weight-semibold text-lg mb-0">Listado de Categorías</h6>
              <p class="text-sm">Gestiona las categorías disponibles para tus posts</p>
            </div>
            <div class="ms-auto d-flex">
              <button
                type="button"
                class="btn btn-sm btn-dark btn-icon d-flex align-items-center me-2"
                data-bs-toggle="modal"
                data-bs-target="#modalCategoria"
                data-mode="create">
                <span class="btn-inner--icon">
                  <svg width="16" height="16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                    <path d="M19 11h-6V5h-2v6H5v2h6v6h2v-6h6z"/>
                  </svg>
                </span>
                <span class="btn-inner--text">Agregar Categoría</span>
              </button>
            </div>
          </div>
        </div>
        <div class="card-body px-0 py-0">
          <div class="border-bottom py-3 px-3 d-sm-flex align-items-center">
  <form class="input-group w-sm-25 ms-auto" method="get" action="">
    <span class="input-group-text text-body">
      <svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 21l-5.2-5.2m0 0A7.5 7.5 0 105.2 5.2a7.5 7.5 0 0010.6 10.6z"/>
      </svg>
    </span>
    <input type="text" class="form-control" name="q" placeholder="Buscar categoría" value="{{ q | default('') }}">
  </form>
</div>

            <div class="table-responsive p-0">
              <table class="table align-items-center mb-0">
                <thead class="bg-gray-100">
                  <tr>
                    <th class="text-secondary text-xs font-weight-semibold opacity-7">Nombre</th>
                    <th class="text-secondary text-xs font-weight-semibold opacity-7 ps-2">Slug</th>
                    <th class="text-center text-secondary text-xs font-weight-semibold opacity-7">Fecha creación</th>
                    <th class="text-secondary opacity-7 text-center">Acciones</th>
                  </tr>
                </thead>
                <tbody>
                  {% for cat in categories %}
                    <tr>
                      <td class="px-3">
                        <h6 class="mb-0 text-sm font-weight-semibold">{{ cat.name }}</h6>
                      </td>
                      <td>
                        <p class="text-sm text-dark font-weight-semibold mb-0">{{ cat.slug }}</p>
                      </td>
                      <td class="align-middle text-center">
                        <span class="text-secondary text-sm font-weight-normal">{{ cat.created_at | date("d/m/Y") }}</span>
                      </td>
                      <td class="align-middle text-center">
                        <a href="javascript:;" class="text-secondary font-weight-bold text-xs me-2 btn-edit-cat" data-bs-toggle="modal" data-bs-target="#modalCategoria" data-mode="edit" data-id="{{ cat.id }}" data-name="{{ cat.name }}">
                          Editar
                        </a>
                        <a href="javascript:;" class="text-danger font-weight-bold text-xs btn-delete-cat" data-id="{{ cat.id }}">
                          Eliminar
                        </a>
                      </td>
                    </tr>
                  {% else %}
                    <tr>
                      <td colspan="4" class="text-center py-4">
                        <span class="text-sm text-secondary">No hay categorías registradas</span>
                      </td>
                    </tr>
                  {% endfor %}
                </tbody>
              </table>
            </div>
            <div class="border-top py-3 px-3 d-flex align-items-center">
              <p class="font-weight-semibold mb-0 text-dark text-sm">
                Page {{ page | default(1) }} of {{ total_pages | default(1) }}
              </p>
              <div class="ms-auto">
                {% if prev_page %}
                  <a href="?page={{ prev_page }}{% if q %}&q={{ q }}{% endif %}" class="btn btn-sm btn-white mb-0">Anterior</a>
                {% endif %}
                {% if next_page %}
                  <a href="?page={{ next_page }}{% if q %}&q={{ q }}{% endif %}" class="btn btn-sm btn-white mb-0">Siguiente</a>
                {% endif %}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    {# --- MODAL NUEVA CATEGORÍA --- #}
    <div class="modal fade" id="modalCategoria" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <form id="formCategoria">
            <input
              type="hidden" name="id" id="catId">
              {# para modo editar #}
              <div class="modal-header">
                <h5 class="modal-title" id="modalCategoriaTitle">Nueva categoría</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
              </div>
              <div class="modal-body">
                <div class="mb-3">
                  <label class="form-label">Nombre</label>
                  <input type="text" class="form-control" name="name" id="catName" required maxlength="120" placeholder="Ej. Guías"></div>
                  <div class="mb-2">
                    <small class="text-secondary d-block">El slug se generará automáticamente.</small>
                    <div id="errorCategoria" class="text-danger small" style="display:none;"></div>
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-white" data-bs-dismiss="modal">Cancelar</button>
                  <button type="submit" class="btn btn-dark" id="btnGuardarCategoria">Guardar</button>
                </div>
              </form>
            </div>
          </div>
        </div>
        {# --- SCRIPT: submit vía fetch, muestra errores en el modal --- #}
        <script>
          (function () {
            const modalEl = document.getElementById('modalCategoria');
            const form = document.getElementById('formCategoria');
            const btn = document.getElementById('btnGuardarCategoria');
            const errBox = document.getElementById('errorCategoria');
            const inputId = document.getElementById('catId');
            const inputName = document.getElementById('catName');
            const titleEl = document.getElementById('modalCategoriaTitle');
            // Abrir modal: setea modo y valores
            modalEl.addEventListener('show.bs.modal', function (event) {
              errBox.style.display = 'none';
              errBox.textContent = '';
              btn.disabled = false;
              btn.innerText = 'Guardar';
              form.reset();
              const opener = event.relatedTarget;
              const mode = opener ?. getAttribute('data-mode') || 'create';
              if (mode === 'edit') {
                const id = opener.getAttribute('data-id');
                const name = opener.getAttribute('data-name') || '';
                inputId.value = id || '';
                inputName.value = name;
                titleEl.textContent = 'Editar categoría';
              } else {
                inputId.value = '';
                titleEl.textContent = 'Nueva categoría';
              }
            });
            form.addEventListener('submit', async function (e) {
              e.preventDefault();
              errBox.style.display = 'none';
              errBox.textContent = '';
              const id = inputId.value.trim();
              const name = inputName.value.trim();
              if (! name) {
                errBox.textContent = 'El nombre es requerido.';
                errBox.style.display = 'block';
                return;
              }
              btn.disabled = true;
              btn.innerText = 'Guardando...';
              // decide endpoint según modo
              const isEdit = !! id;
              const url = isEdit
                ? `/artemis/blog/categories/${
                encodeURIComponent(id)
              }` : '/artemis/blog/categories';
              const method = 'POST'; // mantenemos POST simple también para editar
              try {
                const resp = await fetch(url, {
                  method,
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify({name})
                });
                const data = await resp.json();
                if (! resp.ok || ! data.ok) {
                  errBox.textContent = data.error || 'No se pudo guardar la categoría.';
                  errBox.style.display = 'block';
                  btn.disabled = false;
                  btn.innerText = 'Guardar';
                  return;
                }
                // Éxito: recargar para ver cambios
                window.location.reload();
              } catch (err) {
                errBox.textContent = 'Error de red o servidor.';
                errBox.style.display = 'block';
                btn.disabled = false;
                btn.innerText = 'Guardar';
              }
            });
            // Delegación para botones "Editar" si no usas data-bs-target directo
            document.addEventListener('click', function (e) {
              const a = e.target.closest('.btn-edit-cat');
              if (a) { // nada extra aquí porque Bootstrap abre el modal con data attributes
              }
            });
          })();
        </script>
        <script>
          document.addEventListener('click', async function (e) {
            const btn = e.target.closest('.btn-delete-cat');
            if (! btn) 
              return;
            
            const id = btn.getAttribute('data-id');
            if (! id) 
              return;
            
            if (!confirm('¿Seguro que deseas eliminar esta categoría?')) 
              return;
            
            try {
              const resp = await fetch (`/artemis/blog/categories/${id}/eliminar`, {method: 'POST'});
              const data = await resp.json();
              if (! resp.ok || ! data.ok) {
                alert(data.error || 'No se pudo eliminar la categoría.');
                return;
              }
              // éxito → recargar
              window.location.reload();
            } catch (err) {
              alert('Error de red o servidor.');
            }
          });
        </script>
      {% endblock %}